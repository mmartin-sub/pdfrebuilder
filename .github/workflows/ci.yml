name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      # For local `act` testing, keeping max-parallel: 1 prevents race conditions.
      # You can remove it for faster parallel runs on GitHub's infrastructure.
      max-parallel: 1
      matrix:
        python-version: ["3.11", "3.12"]

    # This block fixes the "Failed to hardlink files" warning.
    env:
      UV_LINK_MODE: copy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v1

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        uv venv
        echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
        uv sync --dev

    - name: Add venv to path
      run: |
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH

    - name: Run linting checks
      run: |
        ruff check .
        black --check --diff .

    - name: Run type checking
      run: |
        mypy bookspine/

    - name: Run tests
      run: |
        pytest

    - name: Run security scan (Bandit)
      run: |
        # Continue even if bandit finds issues, to ensure report is always generated
        bandit -r bookspine/ -o bandit-report.json -f json || true

    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report-${{ matrix.python-version }}
        path: bandit-report.json
