name: Security Scan

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    # Run every Monday at 02:00 UTC
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-3.12-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-3.12-

      - name: Install project dependencies
        run: |
          # Create a virtual environment
          uv venv
          # Install all dependencies including the "dev" extras
          uv sync --all-extras

      - name: Run security checks with bandit and safety
        run: |
          # Activate the virtual environment for the following commands
          source .venv/bin/activate

          # Run bandit and tell it to continue even if vulnerabilities are found
          # We will just upload the report
          bandit -r bookspine/ -f json -o bandit-report.json || true

          # Run safety check
          safety check || true

      - name: Upload security report
        uses: actions/upload-artifact@v4
        # This step will run even if the previous steps failed (due to || true)
        if: always()
        with:
          name: security-report
          path: bandit-report.json
